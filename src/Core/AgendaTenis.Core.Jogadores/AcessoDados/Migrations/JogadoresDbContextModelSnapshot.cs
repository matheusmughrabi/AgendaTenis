// <auto-generated />
using System;
using AgendaTenis.Core.Jogadores.AcessoDados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaTenis.Core.Jogadores.AcessoDados.Migrations
{
    [DbContext(typeof(JogadoresDbContext))]
    partial class JogadoresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgendaTenis.Core.Jogadores.Dominio.CaracteristicaDeJogoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Backhand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstiloDeJogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JogadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaoDominante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CaracteristicaDeJogo", (string)null);
                });

            modelBuilder.Entity("AgendaTenis.Core.Jogadores.Dominio.JogadorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaracteristicaDeJogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LocalizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicaDeJogoId")
                        .IsUnique()
                        .HasFilter("[CaracteristicaDeJogoId] IS NOT NULL");

                    b.HasIndex("LocalizacaoId")
                        .IsUnique()
                        .HasFilter("[LocalizacaoId] IS NOT NULL");

                    b.ToTable("Jogador", (string)null);
                });

            modelBuilder.Entity("AgendaTenis.Core.Jogadores.Dominio.LocalizacaoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JogadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Localizacao", (string)null);
                });

            modelBuilder.Entity("AgendaTenis.Core.Jogadores.Dominio.JogadorEntity", b =>
                {
                    b.HasOne("AgendaTenis.Core.Jogadores.Dominio.CaracteristicaDeJogoEntity", "CaracteristicaDeJogo")
                        .WithOne("Jogador")
                        .HasForeignKey("AgendaTenis.Core.Jogadores.Dominio.JogadorEntity", "CaracteristicaDeJogoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AgendaTenis.Core.Jogadores.Dominio.LocalizacaoEntity", "Localizacao")
                        .WithOne("Jogador")
                        .HasForeignKey("AgendaTenis.Core.Jogadores.Dominio.JogadorEntity", "LocalizacaoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CaracteristicaDeJogo");

                    b.Navigation("Localizacao");
                });

            modelBuilder.Entity("AgendaTenis.Core.Jogadores.Dominio.CaracteristicaDeJogoEntity", b =>
                {
                    b.Navigation("Jogador")
                        .IsRequired();
                });

            modelBuilder.Entity("AgendaTenis.Core.Jogadores.Dominio.LocalizacaoEntity", b =>
                {
                    b.Navigation("Jogador")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
